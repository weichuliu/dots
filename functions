#!/bin/bash

## git
gdifff () { git diff --color "$@" | diff-so-fancy; }
prune () (
  set -euo pipefail

  branch_name="$(git rev-parse --abbrev-ref HEAD)"

  if [[ "${branch_name}" =~ ^(master|develop)$ ]]; then
    git_action=pull
  else
    git_action=fetch
  fi
  echo $(tput setaf 6)git $git_action origin --prune$(tput sgr0)
  git $git_action origin --prune
)
push () (
  set -euo pipefail

  branch_name="$(git rev-parse --abbrev-ref HEAD)"

  [[ "${branch_name}" =~ ^(master|develop)$ ]] &&
    echo "Cannot push to master or develop" &&
    return 1

  if [ "${1:-}" == "force" ]; then
    cmd="git push origin --force-with-lease"
    color_cmd="git push origin $(tput setaf 1)--force-with-lease $(tput setaf 2)$branch_name$(tput sgr0)"
  else
    cmd="git push origin"
    color_cmd="git push origin $(tput setaf 2)$branch_name$(tput sgr0)"
  fi

  echo "$color_cmd"
  read -p "[type 42 to continue] " THE_answer
  [[ "${THE_answer}" = "42" ]]
  $cmd $branch_name
)

## subl
sf. () {
  echo "$(f. $@)"
  subl $(f. $@)
}
sack () {
  echo "$(ack -l $@)"
  subl $(ack -l $@)
}
